policy_module(martex, 1.100.1)

########################################
#
# Declarations
#

type martex_t;
type martex_exec_t;
init_daemon_domain(martex_t, martex_exec_t)

permissive martex_t;

type martex_initrc_exec_t;
init_script_file(martex_initrc_exec_t)

type martex_conf_t;
files_type(martex_conf_t)

type martex_var_lib_t;
files_type(martex_var_lib_t)

type martex_var_run_t;
files_type(martex_var_run_t)

type martex_port_t;
corenet_port(martex_port_t)

########################################
#
# martex local policy
#
allow martex_t self:process { fork };

allow martex_t self:fifo_file rw_fifo_file_perms;
allow martex_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(martex_t, martex_conf_t, martex_conf_t)
manage_files_pattern(martex_t, martex_conf_t, martex_conf_t)

manage_dirs_pattern(martex_t, martex_var_lib_t, martex_var_lib_t)
manage_files_pattern(martex_t, martex_var_lib_t, martex_var_lib_t)
files_var_lib_filetrans(martex_t, martex_var_lib_t, { dir file })

manage_dirs_pattern(martex_t, martex_var_run_t, martex_var_run_t)
manage_files_pattern(martex_t, martex_var_run_t, martex_var_run_t)

sysnet_dns_name_resolve(martex_t)
corenet_all_recvfrom_unlabeled(martex_t)

allow martex_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(martex_t)
corenet_tcp_sendrecv_generic_node(martex_t)
corenet_tcp_sendrecv_all_ports(martex_t)
corenet_tcp_bind_generic_node(martex_t)

gen_require(`
    type martex_port_t;
')
allow martex_t martex_port_t:tcp_socket name_bind;

gen_require(`
    type martex_port_t;
')
allow martex_t martex_port_t:tcp_socket name_connect;

domain_use_interactive_fds(martex_t)

files_read_etc_files(martex_t)

miscfiles_read_localization(martex_t)

sysnet_dns_name_resolve(martex_t)

allow martex_t martex_exec_t:file execute_no_trans;
allow martex_t self:process setsched;
corecmd_exec_ls(martex_t)
corenet_tcp_connect_http_port(martex_t)
dev_read_urand(martex_t)
fs_getattr_xattr_fs(martex_t)
kernel_read_system_state(martex_t)
